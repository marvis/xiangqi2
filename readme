总结一下这个项目做的一些事情:

数据: 来自小米手机拍摄的 小米手机上的QQ象棋界面
目标: 
1. 识别出棋盘所在的位置
   方法: 通过棋盘的特征颜色, 算图像上所有点的颜色到棋盘特征颜色之间的距离, 然后用阈值分割
   程序: chessboardseg
   用法: ./chessboardseg <缩放一倍后的原始图像>
   说明: 这个程序得到的棋盘图像没有进行过矫正, 比较好的方式是使用xiangqi3中的findscreen

2. 找出所有可能的棋盘格点位置
   方法: 通过圆的检测找到棋子位置, 通过角点检测找到网格点位置
   程序: chessgrid
   用法: ./chessgrid <chessboardseg 的输出图像>

3. 对可能的棋盘格点, 计算棋盘的格子长宽, 起点, 然后做X,Y方向的直线拟合
   方法: 找出格子点的最大最小位置, 在水平方向搜索x0, xstep, 计算9个水平位置附件的总的格子点的数目, 目标是使符合条件的格子点最多; 垂直方向同样.
         然后对9条垂直线和10条水平线做最小二乘拟合
	程序: fitlines
	用法: ./fitlines <chessboardseg 的输出图像>
	结果: 由于受相机拍照图像斜切变换的影响, 倾斜的图像很难拟合

由于相机拍摄出来的结果会把矩形变成梯形, 对棋盘网格的识别造成了很大影响, 所以分析的当务之急应该是把梯形转换成矩形. 这个任务将放在xiangqi3中完成

现在xiangqi3和xiangqi2项目合并了, xiangqi3的说明如下
目标
1. 识别并分割出手机屏幕
   方法: 先用小阈值将手机的黑边框分割出来(取最大连通区域), 裁剪出手机的外边框, 反色然后找最大连通区域, 得到屏幕的区域. 通过计算离中心点最远的距离, 找出4个可能的角点, 连接两条对角线, 将图像的外轮廓点划分成四类(根据轮廓点与对角线的位置关系), 然后对每个类的轮廓点做直线拟合. 拟合出的四条直线的四个交点,认为是屏幕的四个角点. 最后将4个角点对应的梯形转为矩形
   程序: findscreen 
   用法: ./findscreen <缩放一倍后的原始图像>

2. 识别象棋棋盘的网格线
   方法: 在上面得到的图像中, 根据棋盘的位置, 将大概的棋盘图像剪切出来, 然后对水平方向和垂直方向投影, 然后通过搜索起点和步长来得到网格线
   程序: findgrids
   用法: ./findgrids <剪切出来的棋盘图像>
   评价: 对于拍摄角度正, 曝光好的图像效果比较好, 但对于质量不好的图像,效果很差

